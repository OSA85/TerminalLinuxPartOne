HW_1. The first part
Linux terminal (GitBash) commands

Нужно уметь делать все пункты задания.
Куда и в каком виде отправлять задание - скажу позже.

1) Посмотреть где я: pwd
2) Создать папку:  mkdir folderName
3) Зайти в папку:  cd folderName
4) Создать 3 папки:  mkdir folder_1
		     mkdir folder_2
		     mkdir folder_3	
		mkdir folder_1 folder_2 folder_3    (можно создать сразу несколько папок за одну команду)
5) Зайти в любоую папку: cd folder_1
6) Создать 5 файлов (3 txt, 2 json): touch nameFile.расширение
					touch text_1.txt	или	cat > text_1.txt (сразу с открытием редактора)
					touch text_2.txt	или	cat > text_2.txt (сразу с открытием редактора)
					touch text_3.txt	или	cat > text_3.txt (сразу с открытием редактора)
					touch proga_1.json
					touch proga_2.json
				или	touch text_1.txt text_2.txt и т.д. сколько надо(можно создать сразу несколько папок за одну команду)		
7) Создать 3 папки: mkdir directory_1 directory_2 directory_3
8. Вывести список содержимого папки: ls                 (строка)
				     ls -la		(список со скрытыми файлами, флаг "а" значит "all")
				     ls -l		(список без скрытых файлов "l" значит "list")
				     ls -a		(строка со скрытыми файлами, флаг "а" значит "all")
9) + Открыть любой txt файл:    cat name_file.расширение		(прочитать файл)
				cat >> name_file.расширение		(открыть файл для редактирования)
					cat >> text_2.txt
10) + написать туда что-нибудь, любой текст:  
"
HW_1. The first part
Linux terminal (GitBash) commands
Нужно уметь делать все пункты задания.
Куда и в каком виде отправлять задание - скажу позже. (обязательно Enter после последней строки которую нужно сохранить)

"

11) + сохранить и выйти:  Ctrl + C
так же можно делать через команду  vim nameFile.расширение потом нажимаем "insert" для входа в редактирование, после завершения редактирования,
"Esc" выход из редактирования, затем для сохранения и выхода из редактора ":wq"(записать и выйти)


12) Выйти из папки на уровень выше: cd .. (если надо выйти выше ставим /.. сколько надо раз)
—
13) переместить любые 2 файла, которые вы создали, в любую другую папку: находимся в папке в которой лежит папка из которой перемещаем
									 mv folder_1/text_2.txt folder_2/text_2.txt
									 mv folder_1/text_3.txt folder_3/text_3.txt
							так же через mv можем переименовать например mv text_2.txt text_2а.txt
							так же можно перенести несколько файлов одной командой  mv folder_2/{proga_1.json,proga_2.json} folder_1/
													или     mv folder_1/proga_1.json folder_1/proga_2.json folder_2/


14) скопировать любые 2 файла, которые вы создали, в любую другую папку: находимся в папке в которой лежит папка из которой перемещаем
									 cp folder_1/proga_1.json folder_2/proga_1.json
									 cp folder_1/proga_2.json folder_3/proga_2.json
							так же можно скопировать несколько файлов одной командой  cp folder_2/{proga_1.json,proga_2.json} folder_1/
													или       cp folder_1/proga_1.json folder_1/proga_2.json folder_2/


15) Найти файл по имени: find . -name nameFile.расширение
			 find . -name *.расширение найдет все файлы с этим расширением
		например: find . -name proga_2.json или find . -name *.txt
16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает: grep чтоИщем nameFile.расширение(в котором ищем)

<============== этой командой вы выведете определенную фразу в определенном файле. А кк отслеживать содержимое файла в реальном времени? Например, добавили пару строк и они отобразились в терминале?


17) вывести несколько первых строк из текстового файла: head -колличествоСтрок nameFile.расширение(из которого выводим первые строки)
							например: head -4 text_2.txt
18) вывести несколько последних строк из текстового файла: tail -колличествоСтрок nameFile.расширение(из которого выводим последние строки)
							например: tail -5 text_2.txt
19) просмотреть содержимое длинного файла (команда less) изучите как она работает: less nameFile.расширение
										   less -s nameFile.расширение (где флаг -s : заменить множество идущих подряд пустых строк одной пустой строкой)
20) вывести дату и время: date
			  date -d 'tomorrow'
			  date -d 'yesterday'
			  date -d 'last monday'
			  date -u  (Вывод UTC-даты)

=========

Задание *
1) Отправить http запрос на сервер: 	curl 'http://162.55.220.72:5005/terminal-hw-request'
				   	Task_1: curl 'http://162.55.220.72:5005/get_method?name=Sergey&age=36'
2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

cat >> script (вставить текст ниже, скрипты начинаются со строки #!/bin/bash)
#!/bin/bash
mkdir folderName
cd folderName
mkdir folder_1 folder_2 folder_3
cd folder_1
touch text_1.txt text_2.txt text_3.txt proga_1.json proga_2.json
mkdir directory_1 directory_2 directory_3
ls -la
mv text_2.txt directory_2/text_2.txt
mv text_3.txt directory_3/text_3.txt

сохранить и выйти:  Ctrl + C

сделать исполняемым: chmod ugo+x script

запустить файл script командой: ./script
=====================
1) Удаление файлов rm nameFile.расширение
2) Удаление папки rm -r nameFolder 
   Удаление пустой папки rmdir nameFolder 